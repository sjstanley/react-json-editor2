exports[`class LevelKeyValue extends /* istanbul ignore next */_react.Component {

	constructor(props) {
		super(props);
		this.state = { greeting: 'Hello', modifiedValue: '' };
		this.removeGreeting = this.removeGreeting.bind(this);
		this.handleUpdate = this.handleUpdate.bind(this);
		this.handleUpdateClick = this.handleUpdateClick.bind(this);

	}

	removeGreeting() {
		this.props.removeGreeting(this.props.name);
	}

	handleUpdate(event) {
		this.setState({ greeting: 'Hello', modifiedValue: event.target.value });
	}
	handleUpdateClick(event) {
		this.props.updateGreeting(this.props.name, this.state.modifiedValue);
		this.setState({ greeting: 'Hello', modifiedValue: '' });
	}


	render() {
		return (
			/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'LevelKeyValue', __source: { fileName: _jsxFileName, lineNumber: 30 }, __self: this }, /* istanbul ignore next */'Item ',
				this.props.index, /* istanbul ignore next */' : ', this.props.name,
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'br', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 32 }, __self: this }),
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{
					type: 'text',
					onChange: this.handleUpdate,
					value: this.state.modifiedValue, __source: { fileName: _jsxFileName, lineNumber: 33 }, __self: this }),

				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'update', onClick: this.handleUpdateClick, __source: { fileName: _jsxFileName, lineNumber: 38 }, __self: this }, /* istanbul ignore next */'Update'),
				/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'remove', onClick: this.removeGreeting, __source: { fileName: _jsxFileName, lineNumber: 39 }, __self: this }, /* istanbul ignore next */'Remove')));


	}} renders and matches our snapshot 1`] = `
<div
  className="LevelKeyValue">
  Item 
   : 
  Person
  <br />
  <input
    onChange={[Function]}
    type="text"
    value="" />
  <button
    className="update"
    onClick={[Function]}>
    Update
  </button>
  <button
    className="remove"
    onClick={[Function]}>
    Remove
  </button>
</div>
`;
